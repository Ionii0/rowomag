!function(e){var t={};function n(a){if(t[a])return t[a].exports;var r=t[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(a,r,function(t){return e[t]}.bind(null,r));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);var a={getCartItems:()=>localStorage.getItem("cartItems")?JSON.parse(localStorage.getItem("cartItems")):[],getCredentials:()=>localStorage.getItem("credentials")?JSON.parse(localStorage.getItem("credentials")):{},setCartItems:e=>{localStorage.setItem("cartItems",JSON.stringify(e))},setCredentials:e=>{localStorage.setItem("credentials",JSON.stringify(e))},deleteCredentials:()=>{localStorage.setItem("credentials",JSON.stringify({}))},deleteAllCartItems:()=>{localStorage.removeItem("cartItems")}};var r={api:(()=>{const e=window.location.origin;return"http://localhost:8080"===e?"http://localhost:5000":e})()};var i={getProductById:async(e,t)=>{const n=await fetch(`${r.api}/api/products/${e}`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer "+t.jwt}});return n&&n.ok?await n.json():`<div> Error getting product with id{ ${e} } from server</div>`},getPendingOrders:async e=>{const t=await fetch(r.api+"/api/order/pending",{headers:{"Content-Type":"application/json",Authorization:"Bearer "+e.jwt}});if(!t||!t.ok){const e=await t.json();throw new Error(e.message)}return await t.json()},getDeliveredOrders:async e=>{const t=await fetch(r.api+"/api/order/delivered",{headers:{"Content-Type":"application/json",Authorization:"Bearer "+e.jwt}});if(!t||!t.ok){const e=await t.json();throw new Error(e.message)}return await t.json()},login:async(e,t)=>{const n=await fetch(r.api+"/api/auth/login",{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({username:e,password:t})});if(!n||!n.ok||"OK"!==n.statusText){const e=await n.json();throw new Error(e.message)}return n.json()},createUser:async(e,t)=>{const n=await fetch(r.api+"/api/user/create-user",{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:"Bearer "+t.jwt},body:JSON.stringify({username:e.username,password:e.password,tokens:e.tokens})});if(!n||"Created"!==n.statusText){const e=await n.json();throw new Error(e.message)}return n.json()},sendOrder:async e=>{const t=a.getCredentials(),n=await fetch(r.api+"/api/order/",{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer "+t.jwt},body:JSON.stringify(e)});if(!n||"Created"!==n.statusText){const e=await n.json();throw new Error(e.message)}return n.json()},deliverOrderById:async(e,t)=>{const n=await fetch(`${r.api}/api/order/deliver-order/${e}`,{headers:{"Content-Type":"application/json",Authorization:"Bearer "+t.jwt}});if(!n||!n.ok){const e=await n.json();throw new Error(e.message)}return await n.json()}};var s={addToCart:e=>{let t=a.getCartItems();const n=t.find(t=>t._id===e._id);t=n?t.map(t=>t._id===n._id?e:t):[...t,e],a.setCartItems(t)},getCartItems:()=>a.getCartItems(),deleteItem:e=>{const t=a.getCartItems();a.setCartItems(t.filter(t=>t!==e))},deleteItemById:e=>{const t=a.getCartItems();a.setCartItems(t.filter(t=>t._id!==e))},deleteAllItems:()=>{a.deleteAllCartItems()}};var o={render:()=>"<div>Error 404. Page not found.</div>"};const d={reRenderView:async()=>{document.getElementById("main-container").innerHTML=await d.render(),await d.afterViewInit()},afterViewInit:()=>{const e=document.getElementsByClassName("quantity"),t=document.getElementsByClassName("cart-button"),n=document.getElementById("pay-button");(e=>{for(let t of e)t.addEventListener("change",e=>{const n=s.getCartItems().find(e=>e._id===t.id);s.addToCart({...n,quantity:Number(e.target.value)}),d.reRenderView()})})(e),(e=>{for(let t of e)t.addEventListener("click",e=>{s.deleteItemById(e.target.id),d.reRenderView()})})(t),(e=>{e.addEventListener("click",async()=>{if(s.getCartItems().length>0){const e=s.getCartItems(),t={items:e,price:e.reduce((e,t)=>e+t.price*t.quantity,0)};try{await i.sendOrder(t);const n=a.getCredentials(),r=e.reduce((e,t)=>e+t.price*t.quantity,0);n.tokens=n.tokens-r,a.setCredentials(n),s.deleteAllItems(),document.location.hash="/"}catch(e){alert(e.message)}}else alert("Your cart is empty !")})})(n)},render:()=>{if(0===Object.keys(a.getCredentials()).length)return document.location.hash="/login",alert("You have to log in before accessing the CART page"),"";const e=s.getCartItems();return`\n        <div class="cart">\n            <div class="cart-list">\n                <ul class="cart-list-container">\n                    <li> \n                        <h3>Shopping Cart</h3>\n                        <div>Price</div>\n                    </li>\n                  \n                        ${0===e.length?"<div>Your cart is empty</div>":e.map(e=>`<li>\n                    <div class="cart-image">\n                        <img src="${e.image}" alt="${e.name}"/>\n                    </div>   \n                    <div class="cart-name"> \n                        <div>${e.name}</div> \n                            <div class="cart-quantity">\n                                Quantity: <input class="quantity" id="${e._id}" type="number" min="1" max="${e.stock}" value="${e.quantity}">\n                                <button type="button" class="cart-button" id="${e._id}">Delete</button>\n                            </div>  \n                        \n                        <div class="cart-price">\n                            $${e.price}\n                        </div>\n                    </div>   \n                </li>`).join("\n")}\n                </ul>\n            </div>\n              <div class="pay-cart">\n                <h3> Total (${e.reduce((e,t)=>e+t.quantity,0)} items):\n                 <i class="fa-solid fa-coins" style="margin-right:1rem"></i>${e.reduce((e,t)=>e+t.price*t.quantity,0)}\n                </h3>\n                <button id="pay-button" class="cart-button">Pay</button>\n            </div>\n        </div>\n       `}};const l={reRenderView:async()=>{document.getElementById("main-container").innerHTML=await l.render(),await l.afterViewInit()},afterViewInit:()=>{(e=>{for(let t of e)t.addEventListener("click",async e=>{await i.deliverOrderById(e.target.id,a.getCredentials()),await l.reRenderView()})})(document.getElementsByClassName("admin-button"))},render:async()=>{const e=a.getCredentials(),t=await i.getPendingOrders(e),n=await i.getDeliveredOrders(e);return`\n        <div class="admin">\n            <div class="admin-list">\n                <ul class="admin-list-container">\n                    <li> \n                        <h3>Pending Orders</h3>\n                        <div>Action</div>\n                    </li>\n                  \n                        ${0===t.length?"<div>Your cart is empty</div>":t.map(e=>`<li>\n                    <div class="admin-order"> \n                        ${e.username}: ${e.items.map(e=>`&nbsp ${e.name} (${e.quantity}) `)}\n                         <button id="${e._id}" class="admin-button">Deliver</button>\n                    </div>   \n                </li>`).join("\n")}\n                </ul>\n            </div>\n            <div class="admin-delivered-list">\n                <ul class="admin-delivered-list-container" id="admin-delivered">\n                    <li> \n                        <h3>Delivered Orders</h3>\n                    </li>\n                        ${0===n.length?"<div>Your cart is empty</div>":n.map(e=>`<li>\n                    <div class="admin-order"> \n                        ${e.username}: ${e.items.map(e=>`&nbsp ${e.name} (${e.quantity}) `)}\n                    </div>   \n                </li>`).join("\n")}\n                </ul>\n            </div>\n        </div>\n       `}};const c={"/":{afterViewInit:()=>{(e=>{for(let t of e)t.addEventListener("click",async e=>{const t=await i.getProductById(e.currentTarget.id,a.getCredentials());s.addToCart({...t,quantity:Number(1)})})})(document.getElementsByClassName("button-div"))},render:async()=>{if(0===Object.keys(a.getCredentials()).length)return document.location.hash="/login","";const e=await fetch(r.api+"/api/products",{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer "+a.getCredentials().jwt}});if(!e||!e.ok)return console.log(e),"<div> Error getting products from server</div>";return`\n        <ul class="products">\n            ${(await e.json()).map(e=>`<li>\n             <div class="product">\n                <a href="/#/product/${e._id}">\n                    <img src="${e.image}" alt="${e.name}">\n                </a>\n                <div class="product-name">\n                    <a href="/#/product/${e._id}">\n                        ${e.name}\n                    </a>\n                </div>\n                <div class="product-price">\n                   <i class="fa-solid fa-coins"></i> ${e.price}\n                   <button class="button-div" id="${e._id}">Add to <i class="fa-solid fa-cart-shopping"></i></button>                   \n                </div>\n              </div>\n            </li>`)}\n        </ul>`}},"/orders":l,"/create-user":{afterViewInit:()=>{document.getElementById("create-user-form").addEventListener("submit",async e=>{e.preventDefault();try{const t={username:document.getElementById("username").value,password:document.getElementById("password").value,tokens:document.getElementById("tokens").value},n=await i.createUser(t,a.getCredentials());e.target.reset(),alert(n.message)}catch(e){alert(e.message)}})},render:()=>'\n        <div class="form-container">\n            <div class="form-content">\n                <form id="create-user-form">\n                    <ul class="form-items box">\n                    <li>\n                        <h1>Create User</h1>\n                    </li>\n                    <li>\n                        <input type="text" name="username" id="username" placeholder="username" required>\n                    </li>\n                    <li>\n                        <input type="text" name="password" id="password" placeholder="password" required>\n                    </li>\n                     <li>\n                        <input type="number" name="tokens" id="tokens" placeholder="tokens max 100" min="0" max="100" required>\n                    </li>\n                     <li>\n                        <button type="submit" class="submit">Create</button>\n                    </li>\n                    </ul>\n                </form>\n            </div>\n        </div>'},"/cart":d,"/login":{afterViewInit:()=>{document.getElementById("login-form").addEventListener("submit",async e=>{e.preventDefault();const t=await(async({username:e,password:t})=>{try{return await i.login(e,t)}catch(e){return console.log("Inside login function: "+e),e}})({username:document.getElementById("username").value,password:document.getElementById("password").value});t.message?alert(t.message):(a.setCredentials(t),document.location.hash="/")})},render:()=>0!==Object.keys(a.getCredentials()).length?(document.location.hash="/",""):'\n        <div class="form-container">\n            <div class="form-content">\n                <form id="login-form">\n                    <ul class="form-items box">\n                    <li>\n                        <h1>Login</h1>\n                    </li>\n                    <li>\n                        <input type="text" name="username" id="username" placeholder="username" required>\n                    </li>\n                    <li>\n                        <input type="password" name="password" id="password" placeholder="password" required>\n                    </li>\n                    <li>\n                        <button type="submit" class="submit">Login</button>\n                    </li>\n                    </ul>\n                </form>\n            </div>\n        </div>'},"/logout":{render:()=>(a.deleteCredentials(),document.location.hash="/login","")}};var u={getCurrentView:()=>{const e=(()=>{const e=document.location.hash.toLowerCase().split("/");return{resource:e[1],id:e[2],action:e[3]}})(),t=(e.resource?"/"+e.resource:"/")+(e.id?"/:id":"")+(e.action?"/"+e.action:"");return c[t]?c[t]:o}};var m={afterViewInit:()=>{},render:()=>{const e=a.getCredentials();return`\n      <div class="brand">\n            <a href="/#/">RowoMag</a>\n        </div>\n        ${e.username?function(e){return`\n            <div class="right-navbar">\n                ${e.isAdmin?'<a href="/#/create-user" style="margin-right:1rem"><i class="fa-solid fa-user-plus"></i></a>\n                                         <a href="/#/orders" style="margin-right:0.5rem"><i class="fa-solid fa-truck-fast"></i></a>':""}\n                <span style="padding:0.5rem">${e.tokens}</span><i class="fa-solid fa-coins"></i>\n                <a href="/#/cart" style="margin-left:0.5rem"><i class="fa-solid fa-cart-shopping"></i></a>\n                <a href="/#/logout" style="margin-left:0.5rem"><i class="fa fa-sign-out"></i></a>\n            </div>`}(e):"\n      \n    "}\n      `}};const p=async()=>{const e=u.getCurrentView(),t=document.getElementById("main-container");document.getElementById("header-container").innerHTML=await m.render(),t.innerHTML=await e.render(),await e.afterViewInit()};window.addEventListener("load",p),window.addEventListener("hashchange",p)}]);
